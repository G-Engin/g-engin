# === GEng_Animation_calltips.txt ===
_GEng_Anim_Create (  ) Créer un objet Animation (required: #include <GEngin.au3>)
_GEng_Anim_FrameCount ( ByRef hAnim ) Retourne le nombre de frames contenues dans un objet Animation (required: #include <GEngin.au3>)
_GEng_Anim_FrameAdd ( ByRef hAnim , ByRef hImage , iFramDuration [, x [, y [, w [, h]]]] ) Ajoute une frame dans l'objet animation (required: #include <GEngin.au3>)
_GEng_Anim_FrameMod ( ByRef hAnim , iFrameNumber , ByRef hImage [, iFramDuration [, x [, y [, w [, h]]]]] ) Modifier une frame d'un Objet Animation (required: #include <GEngin.au3>)

# === GEng_Color_Constants_calltips.txt ===
_GEng_Color_ShowList() Afficher la liste des couleurs et le nom de la variable

# === GEng_Draw_calltips.txt ===
_GEng_ScrFlush ( [ iBkColor ] ) Permet d'éffacer l'écran, en lui donnant une couleur (required: #include <GEngin.au3>)
_GEng_ScrUpdate (  ) Valider les opération de déssin (copie le hBitmap dans le hGraphic) (required: #include <GEngin.au3>)
_GEng_FPS_Get ( [ iDelay ] )  (required: #include <GEngin.au3>)

# === GEng_Geometry_calltips.txt ===
_GEng_Sprite_PointGet ( ByRef hSprite , iImgX , iImgY , ByRef x , ByRef y ) Retourne la position d'un point dans un sprite (required: #include <GEngin.au3>)
_GEng_PointToPoint_Dist ( x0 , y0 , x , y ) Calcule la distance (pixels) entre 2 points (required: #include <GEngin.au3>)
_GEng_PointToPoint_Angle ( x0 , y0 , x , y ) Retourne l'angle (degrés) entre le point premier point, et le second (required: #include <GEngin.au3>)
_GEng_PointToPoint_Vector ( x0 , y0 , x , y [, iGrandeur] ) Retourne un vecteur (de grandeur variable) orienté du premier point, vers le second (required: #include <GEngin.au3>)
_GEng_SpriteToPoint_Dist ( ByRef hSprite , x , y ) Calcule la distance (pixels) entre un sprite et un point (required: #include <GEngin.au3>)
_GEng_SpriteToPoint_Angle ( ByRef hSprite , x , y ) Retourne l'angle (degrés) entre un sprite et un point (required: #include <GEngin.au3>)
_GEng_SpriteToPoint_AngleDiff ( ByRef hSprite , x , y ) Retourne l'angle relatif à l'angle du sprite, entre ce dernier et un point (required: #include <GEngin.au3>)
_GEng_SpriteToPoint_Vector ( ByRef hSprite , x , y [, iGrandeur] ) Retourne un vecteur (de grandeur variable) orienté du sprite, vers le point (required: #include <GEngin.au3>)
_GEng_SpriteToSprite_Dist ( ByRef hSprite , ByRef hSprite2 ) Calcule la distance (pixels) entre 2 objets Sprite (required: #include <GEngin.au3>)
_GEng_SpriteToSprite_Angle ( ByRef hSprite , ByRef hSprite2 ) Retourne l'angle (degrés) entre 2 objets Sprite (required: #include <GEngin.au3>)
_GEng_SpriteToSprite_AngleDiff ( ByRef hSprite , ByRef hSprite2 ) Retourne l'angle relatif à l'angle du premier sprite, entre ce dernier et le second sprite (required: #include <GEngin.au3>)
_GEng_SpriteToSprite_Vector ( ByRef hSprite , ByRef hSprite2 [, iGrandeur] ) Retourne un vecteur (de grandeur variable) orienté du premier sprite, vers le second (required: #include <GEngin.au3>)
_GEng_AngleToVector ( iAngle [, iGrandeur] ) Retourne un vecteur, à partire d'un angle et d'une grandeur (required: #include <GEngin.au3>)
_GEng_VectorToAngle ( difX , difY ) Retourne l'angle d'un vecteur (similaire à _GEng_SpriteToPoint_Angle) (required: #include <GEngin.au3>)

# === GEng_Image_calltips.txt ===
_GEng_ImageLoad ( sPath [, imgW [, imgH [, x [, y [, w [, h]]]]]] ) Charge un fichier image pour être utiliser par GEngin (required: #include <GEngin.au3>)
_GEng_ImageLoadStream ( pic [, imgW [, imgH [, x [, y [, w [, h]]]]]] )  (required: #include <GEngin.au3>)

# === GEng_Sound_calltips.txt ===
_GEng_Sound_Init ( [ iSampleRate [, iStereo]] ) Initialisation des fonctionnalitées Audio (required: #include <GEngin.au3>)
_GEng_Sound_Shutdown (  ) Stop les fonctionnalitées Audio et libère les ressources (required: #include <GEngin.au3>)
_GEng_Sound_GlobalVolume ( [ iVolume ] ) Change/récupère la valeur du volume sonore global de l'application (required: #include <GEngin.au3>)
_GEng_Sound_Load ( sPath [, iLoop] ) Charge un fichier audio (required: #include <GEngin.au3>)
_GEng_Sound_Play ( hSound [, iRestart] ) Joue un son préalablement chargé (required: #include <GEngin.au3>)
_GEng_Sound_AttribSet ( hSound [, iVolume [, iPan [, iPitch]]] ) Ajuste les attributs d'un objet Sound (required: #include <GEngin.au3>)
_GEng_Sound_AttribGet ( hSound , ByRef iVolume , ByRef iPan , ByRef iPitch , ByRef iDefaultSampleRate ) Récupère les attributs d'un objet Sound (required: #include <GEngin.au3>)
_GEng_Sound_SetLoop ( ByRef hSound , iLoop ) Spécifie si l'objet Sound doit être joué en boucle ou pas (required: #include <GEngin.au3>)
_GEng_Sound_IsPlaying ( ByRef hSound ) Retourne le status d'un objet Sound (required: #include <GEngin.au3>)
_GEng_Sound_Pause ( ByRef hSound ) Met en pause un objet Sound (required: #include <GEngin.au3>)
_GEng_Sound_Stop ( ByRef hSound ) Stop un objet Sound (required: #include <GEngin.au3>)
_GEng_Sound_Free ( ByRef hSound ) Supprime et libère les ressources d'un objet Sound (required: #include <GEngin.au3>)

# === GEng_Sprite_Animation_calltips.txt ===
_GEng_Sprite_AnimRewind ( ByRef hSprite [, iFrame] )  (required: #include <GEngin.au3>)
_GEng_Sprite_Animate ( ByRef hSprite , ByRef hAnim [, iStopFrame] ) Anime un Sprite avec l'objet animation spécifié (required: #include <GEngin.au3>)
_GEng_Sprite_AnimDelayMultiplierGet ( ByRef hSprite ) Récupère la valeur actuelle du coeficient de multiplication de la duré des frame d'animation (required: #include <GEngin.au3>)
_GEng_Sprite_AnimDelayMultiplierSet ( ByRef hSprite , iVal ) Assigne une valeur au coeficient de multiplication de la duré des frame d'animation (required: #include <GEngin.au3>)

# === GEng_Sprite_Append_calltips.txt ===
_GEng_Sprite_ExtInfoAdd ( ByRef hSprite , vInfo ) Attache une variable à un sprite (required: #include <GEngin.au3>)
_GEng_Sprite_ExtInfoSet ( ByRef hSprite , iIndex , vInfo ) Modifie la valeur d'une variable attaché à un sprite (required: #include <GEngin.au3>)
_GEng_Sprite_ExtInfoGet ( ByRef hSprite , iIndex ) Récupère un valeur attaché à un sprite (required: #include <GEngin.au3>)

# === GEng_Sprite_calltips.txt ===
_GEng_Sprite_Create ( [ hImage ] ) Créer un Objet Sprite (required: #include <GEngin.au3>)
_GEng_Sprite_ImageSet ( ByRef hSprite , ByRef hImage [, x [, y [, w [, h]]]] ) Assigne un objet Image à un Objet Sprite (required: #include <GEngin.au3>)
_GEng_Sprite_ImageSetRect ( ByRef hSprite , x , y , w , h [, InitSize] ) Change le rectangle sélectioné de l'objet image actuellement assigné à l'objet sprite (required: #include <GEngin.au3>)
_GEng_Sprite_Draw ( ByRef hSprite [, iCalculateMovements] ) Déssine un sprite à l'écran selon ses attribut position (required: #include <GEngin.au3>)
_GEng_Sprite_Delete ( ByRef hSprite ) Supprime un Objet Sprite (required: #include <GEngin.au3>)

# === GEng_Sprite_Collision_calltips.txt ===
_GEng_Sprite_CollisionSet ( ByRef hSprite , iType [, x [, y [, w [, h]]]] ) Spécifie la forme et la taille de la hit-box d'un sprite (required: #include <GEngin.au3>)
_GEng_Sprite_Collision ( ByRef hSprite1 , ByRef hSprite2 [, iScrBorderPosition [, iDynamique [, iPrecision]]] ) Test si il y a collision entre 2 sprites (required: #include <GEngin.au3>)
_GEng_Sprite_CollisionScrBorders ( ByRef hSprite [, iDynamique] ) Test la collision entre un sprite et tous les bords de l'écran (required: #include <GEngin.au3>)

# === GEng_Sprite_Dynamics_calltips.txt ===
_GEng_Sprite_Move ( ByRef hSprite ) Calcule et met à jout position et angle d'un sprite selon ses paramètres dynamiques (required: #include <GEngin.au3>)

# === GEng_Sprite_Get_calltips.txt ===
_GEng_Sprite_MassGet ( ByRef hSprite ) Retourne la masse d'un objet Sprite (required: #include <GEngin.au3>)
_GEng_Sprite_PosGet ( ByRef hSprite , ByRef x , ByRef y ) Récupère la position d'un Objet Sprite (required: #include <GEngin.au3>)
_GEng_Sprite_SizeGet ( ByRef hSprite , ByRef x , ByRef y ) Récupère la taille d'un Objet Sprite (required: #include <GEngin.au3>)
_GEng_Sprite_OriginGet ( ByRef hSprite , ByRef x , ByRef y ) Récupère la position du point d'origine d'un Objet Sprite (required: #include <GEngin.au3>)
_GEng_Sprite_SpeedGet ( ByRef hSprite , ByRef x , ByRef y ) Récupère la vitesse d'un Objet Sprite (required: #include <GEngin.au3>)
_GEng_Sprite_MaxSpeedGet ( ByRef hSprite ) Récupère la vitesse maximum d'un Objet Sprite (required: #include <GEngin.au3>)
_GEng_Sprite_AccelGet ( ByRef hSprite , ByRef x , ByRef y ) Récupère l'accélération d'un Objet Sprite (required: #include <GEngin.au3>)
_GEng_Sprite_InnertieGet ( ByRef hSprite ) Récupère l'innertie d'un Objet Sprite (required: #include <GEngin.au3>)
_GEng_Sprite_AngleGet ( ByRef hSprite [, iType] ) Récupère l'angle d'un Objet Sprite (required: #include <GEngin.au3>)
_GEng_Sprite_AngleOriginGet ( ByRef hSprite [, iType] ) Récupère l'angle origine d'un Objet Sprite (required: #include <GEngin.au3>)
_GEng_Sprite_AngleSpeedGet ( ByRef hSprite ) Récupère la vitesse de rotation d'un Objet Sprite (required: #include <GEngin.au3>)
_GEng_Sprite_AngleMaxSpeedGet ( ByRef hSprite ) Récupère la vitesse de rotation maximale d'un Objet Sprite (required: #include <GEngin.au3>)
_GEng_Sprite_AngleAccelGet ( ByRef hSprite ) Récupère l'accélération de rotation d'un Objet Sprite (required: #include <GEngin.au3>)

# === GEng_Sprite_Set_calltips.txt ===
_GEng_Sprite_MasseSet ( ByRef hSprite , iMasse ) Ajuste la masse d'un Sprite pour les calcules de collision dynamique (required: #include <GEngin.au3>)
_GEng_Sprite_PosSet ( ByRef hSprite [, x [, y]] ) Modifie la position d'un Objet Sprite (required: #include <GEngin.au3>)
_GEng_Sprite_SizeSet ( ByRef hSprite [, w [, h]] ) Modifie la taille d'un Objet Sprite (required: #include <GEngin.au3>)
_GEng_Sprite_OriginSet ( ByRef hSprite [, x [, y]] ) Modifie le point d'origine d'un Objet Sprite (required: #include <GEngin.au3>)
_GEng_Sprite_OriginSetEx ( ByRef hSprite , eOrigin ) Modifie le point d'origine d'un Objet Sprite (required: #include <GEngin.au3>)
_GEng_Sprite_AngleOriginSet ( ByRef hSprite , iAngle ) Modifie la valeur de l'angle d'origine d'un Sprite (la direction avant de l'image, 0°) (required: #include <GEngin.au3>)
_GEng_Sprite_SpeedSet ( ByRef hSprite [, x [, y [, max]]] ) Modifie la vitesse et la vitesse maximale d'un Sprite (required: #include <GEngin.au3>)
_GEng_Sprite_SpeedAdd ( ByRef hSprite [, x [, y]] ) Additione les valeur en paramètres à la vitesse actuelle d'un Sprite (required: #include <GEngin.au3>)
_GEng_Sprite_AccelSet ( ByRef hSprite [, x [, y]] ) Modifie l'accélération d'un sprite (required: #include <GEngin.au3>)
_GEng_Sprite_AccelAdd ( ByRef hSprite [, x [, y]] ) Additione les valeur en paramètres à l'accélération actuelle d'un Sprite (required: #include <GEngin.au3>)
_GEng_Sprite_InnertieSet ( ByRef hSprite , value ) Modifie l'innertie d'un Sprite (required: #include <GEngin.au3>)
_GEng_Sprite_AngleSet ( ByRef hSprite , iAngle ) Modifie l'angle (direction) d'un Sprite (required: #include <GEngin.au3>)
_GEng_Sprite_AngleAdd ( ByRef hSprite [, iAngle] ) Additione la valeur passé en paramètre à l'angle actuel d'un Sprite (required: #include <GEngin.au3>)
_GEng_Sprite_AngleSpeedSet ( ByRef hSprite [, iAngle [, iMax]] ) Modifie la vitesse de rotation, et la vitesse de rotation maximale d'un Sprite (required: #include <GEngin.au3>)
_GEng_Sprite_AngleSpeedAdd ( ByRef hSprite [, iAngle] ) Ajoute la valeur en paramètre à la vitesse de rotation actuelle d'un Sprite (required: #include <GEngin.au3>)
_GEng_Sprite_AngleAccelSet ( ByRef hSprite [, iAngle] ) Modifie l'accélération de rotation d'un objet Sprite (required: #include <GEngin.au3>)
_GEng_Sprite_AngleAccelAdd ( ByRef hSprite [, iAngle] ) Additione la valeur en paramètre à l'accélération de rotation actuelle d'un Sprite (required: #include <GEngin.au3>)
_GEng_sprite_AngleInnertieSet ( ByRef hSprite [, iAngle] ) Modifie l'innertie de rotation d'un Sprite (required: #include <GEngin.au3>)
_GEng_Sprite_ColorMatrixTranslate ( ByRef hSprite [, fRed [, fGreen [, fBlue [, fAlpha]]]] ) Modifie les composantes des couleurs de l'image d'un Objet Sprite (required: #include <GEngin.au3>)

# === GEng_System_calltips.txt ===
_GEng_Start ( sTitle , iW , iH [, iX [, iY [, iStyle [, iExtStyle]]]] ) Créer une fenètre d'affichage et lance GEngin (required: #include <GEngin.au3>)
_GEng_Shutdown (  ) Stop GEngin, supprime la fenètre d'affichage, et libère toutes les ressources (required: #include <GEngin.au3>)
_GEng_SetDebug ( [ mode ] ) Active/Désactive/Récupère le status actuel du mode debug (required: #include <GEngin.au3>)

# === GEng_Text_calltips.txt ===
_GEng_Font_Create ( [ sFontName [, iFontSize [, iFontStyle [, iFormat [, iAlign]]]]] ) Créer un objet Font pour être utiliser par un Objet Text (required: #include <GEngin.au3>)
_GEng_Font_Delete ( ByRef hFont ) Supprime un Objet Font (required: #include <GEngin.au3>)
_GEng_Text_Create ( ByRef hFont [, sText [, iColor [, iPosX [, iPosY [, iWidth [, iHeight]]]]]] ) Créer un objet Text à afficher à l'écran (required: #include <GEngin.au3>)
_GEng_Text_Delete ( ByRef hTxtRect ) Supprime un objet Text (required: #include <GEngin.au3>)
_GEng_Text_FontSet ( ByRef hTxtRect [, hFont] ) Change la police (objet Font) utilisé par un Objet Text (required: #include <GEngin.au3>)
_GEng_Text_StringSet ( ByRef hTxtRect [, sText] ) Change le texte affiché par un objet Text (required: #include <GEngin.au3>)
_GEng_Text_StringGet ( ByRef hTxtRect ) Récupère le texte contenu dans un Objet Text (required: #include <GEngin.au3>)
_GEng_Text_PosSet ( ByRef hTxtRect [, iPosX [, iPosY [, iWidth [, iHeight]]]] ) Change la position et les dimensions du rectangle affichant le texte d'un Objet Text (required: #include <GEngin.au3>)
_GEng_Text_PosGet ( ByRef hTxtRect , ByRef iPosX , ByRef iPosY , ByRef iWidth , ByRef iHeight ) Récupère la position et les dimensions du rectangle affichant le texte d'un Objet Text (required: #include <GEngin.au3>)
_GEng_Text_SizeMeasure ( ByRef hFont , sText , ByRef w , ByRef h ) Donne la taille (Largeur, Hauteur) d'un rectangle nécéssaire à l'affichage d'un texte (required: #include <GEngin.au3>)
_GEng_Text_ColorSet ( ByRef hTxtRect , iColor ) Modifie la couleur du texte d'un Objet Text (required: #include <GEngin.au3>)
_GEng_Text_Draw ( ByRef hTxtRect ) Affiche un objet Text (required: #include <GEngin.au3>)